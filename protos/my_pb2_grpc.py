# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import my_pb2 as my__pb2


class MafiaServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetUserName = channel.unary_unary(
                '/MafiaServer/SetUserName',
                request_serializer=my__pb2.SetUserNameRequest.SerializeToString,
                response_deserializer=my__pb2.ConnectedPlayers.FromString,
                )
        self.GetNotifications = channel.unary_stream(
                '/MafiaServer/GetNotifications',
                request_serializer=my__pb2.NotificationsRequest.SerializeToString,
                response_deserializer=my__pb2.NotificationsResponse.FromString,
                )
        self.Disconnect = channel.unary_unary(
                '/MafiaServer/Disconnect',
                request_serializer=my__pb2.DisconnectRequest.SerializeToString,
                response_deserializer=my__pb2.Empty.FromString,
                )
        self.SetReadyStatus = channel.unary_unary(
                '/MafiaServer/SetReadyStatus',
                request_serializer=my__pb2.ReadyRequest.SerializeToString,
                response_deserializer=my__pb2.ReadyResponse.FromString,
                )
        self.KillPlayerVote = channel.unary_unary(
                '/MafiaServer/KillPlayerVote',
                request_serializer=my__pb2.KillVoteRequest.SerializeToString,
                response_deserializer=my__pb2.Empty.FromString,
                )
        self.KillPlayerMafia = channel.unary_unary(
                '/MafiaServer/KillPlayerMafia',
                request_serializer=my__pb2.KillPlayerMafiaRequest.SerializeToString,
                response_deserializer=my__pb2.EndNightResponse.FromString,
                )
        self.CheckPlayer = channel.unary_unary(
                '/MafiaServer/CheckPlayer',
                request_serializer=my__pb2.CheckPlayerRequest.SerializeToString,
                response_deserializer=my__pb2.EndNightResponse.FromString,
                )
        self.EndDay = channel.unary_unary(
                '/MafiaServer/EndDay',
                request_serializer=my__pb2.EndDayRequest.SerializeToString,
                response_deserializer=my__pb2.EndDayResponse.FromString,
                )
        self.SkipNight = channel.unary_unary(
                '/MafiaServer/SkipNight',
                request_serializer=my__pb2.SkipNightRequest.SerializeToString,
                response_deserializer=my__pb2.EndNightResponse.FromString,
                )


class MafiaServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SetUserName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNotifications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Disconnect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetReadyStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KillPlayerVote(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KillPlayerMafia(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckPlayer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndDay(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SkipNight(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MafiaServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetUserName': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUserName,
                    request_deserializer=my__pb2.SetUserNameRequest.FromString,
                    response_serializer=my__pb2.ConnectedPlayers.SerializeToString,
            ),
            'GetNotifications': grpc.unary_stream_rpc_method_handler(
                    servicer.GetNotifications,
                    request_deserializer=my__pb2.NotificationsRequest.FromString,
                    response_serializer=my__pb2.NotificationsResponse.SerializeToString,
            ),
            'Disconnect': grpc.unary_unary_rpc_method_handler(
                    servicer.Disconnect,
                    request_deserializer=my__pb2.DisconnectRequest.FromString,
                    response_serializer=my__pb2.Empty.SerializeToString,
            ),
            'SetReadyStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SetReadyStatus,
                    request_deserializer=my__pb2.ReadyRequest.FromString,
                    response_serializer=my__pb2.ReadyResponse.SerializeToString,
            ),
            'KillPlayerVote': grpc.unary_unary_rpc_method_handler(
                    servicer.KillPlayerVote,
                    request_deserializer=my__pb2.KillVoteRequest.FromString,
                    response_serializer=my__pb2.Empty.SerializeToString,
            ),
            'KillPlayerMafia': grpc.unary_unary_rpc_method_handler(
                    servicer.KillPlayerMafia,
                    request_deserializer=my__pb2.KillPlayerMafiaRequest.FromString,
                    response_serializer=my__pb2.EndNightResponse.SerializeToString,
            ),
            'CheckPlayer': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckPlayer,
                    request_deserializer=my__pb2.CheckPlayerRequest.FromString,
                    response_serializer=my__pb2.EndNightResponse.SerializeToString,
            ),
            'EndDay': grpc.unary_unary_rpc_method_handler(
                    servicer.EndDay,
                    request_deserializer=my__pb2.EndDayRequest.FromString,
                    response_serializer=my__pb2.EndDayResponse.SerializeToString,
            ),
            'SkipNight': grpc.unary_unary_rpc_method_handler(
                    servicer.SkipNight,
                    request_deserializer=my__pb2.SkipNightRequest.FromString,
                    response_serializer=my__pb2.EndNightResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'MafiaServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MafiaServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SetUserName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaServer/SetUserName',
            my__pb2.SetUserNameRequest.SerializeToString,
            my__pb2.ConnectedPlayers.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/MafiaServer/GetNotifications',
            my__pb2.NotificationsRequest.SerializeToString,
            my__pb2.NotificationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Disconnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaServer/Disconnect',
            my__pb2.DisconnectRequest.SerializeToString,
            my__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetReadyStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaServer/SetReadyStatus',
            my__pb2.ReadyRequest.SerializeToString,
            my__pb2.ReadyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KillPlayerVote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaServer/KillPlayerVote',
            my__pb2.KillVoteRequest.SerializeToString,
            my__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KillPlayerMafia(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaServer/KillPlayerMafia',
            my__pb2.KillPlayerMafiaRequest.SerializeToString,
            my__pb2.EndNightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckPlayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaServer/CheckPlayer',
            my__pb2.CheckPlayerRequest.SerializeToString,
            my__pb2.EndNightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndDay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaServer/EndDay',
            my__pb2.EndDayRequest.SerializeToString,
            my__pb2.EndDayResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SkipNight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaServer/SkipNight',
            my__pb2.SkipNightRequest.SerializeToString,
            my__pb2.EndNightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
